{"version":3,"file":"plugin.js","sources":["esm/definitions.js","esm/index.js","esm/predefined-web-responses.js","esm/safari-helpers.js","esm/VoiceRecorderImpl.js","esm/web.js"],"sourcesContent":["export const RecordingStatus = {\r\n    RECORDING: 'RECORDING',\r\n    PAUSED: 'PAUSED',\r\n    NONE: 'NONE',\r\n};\r\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\r\nconst VoiceRecorder = registerPlugin('VoiceRecorder', {\r\n    web: () => import('./web').then((m) => new m.VoiceRecorderWeb()),\r\n});\r\nexport * from './definitions';\r\nexport { VoiceRecorder };\r\n//# sourceMappingURL=index.js.map","export const successResponse = () => ({ value: true });\r\nexport const failureResponse = () => ({ value: false });\r\nexport const missingPermissionError = () => new Error('MISSING_PERMISSION');\r\nexport const alreadyRecordingError = () => new Error('ALREADY_RECORDING');\r\nexport const microphoneBeingUsedError = () => new Error('MICROPHONE_BEING_USED');\r\nexport const deviceCannotVoiceRecordError = () => new Error('DEVICE_CANNOT_VOICE_RECORD');\r\nexport const failedToRecordError = () => new Error('FAILED_TO_RECORD');\r\nexport const emptyRecordingError = () => new Error('EMPTY_RECORDING');\r\nexport const recordingHasNotStartedError = () => new Error('RECORDING_HAS_NOT_STARTED');\r\nexport const failedToFetchRecordingError = () => new Error('FAILED_TO_FETCH_RECORDING');\r\nexport const couldNotQueryPermissionStatusError = () => new Error('COULD_NOT_QUERY_PERMISSION_STATUS');\r\n//# sourceMappingURL=predefined-web-responses.js.map","/**\r\n * Safari-specific helper functions to handle MediaRecorder limitations\r\n */\r\nexport const isSafari = () => {\r\n    return true;\r\n    //   return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n};\r\nexport const isSafariVersion = (version) => {\r\n    const userAgent = navigator.userAgent;\r\n    const safariMatch = userAgent.match(/Version\\/(\\d+)/);\r\n    if (safariMatch) {\r\n        return parseInt(safariMatch[1]) >= version;\r\n    }\r\n    return false;\r\n};\r\n/**\r\n * Safari has known issues with MediaRecorder API for longer recordings\r\n * This function provides Safari-specific MediaRecorder options\r\n */\r\nexport const getSafariMediaRecorderOptions = () => {\r\n    if (!isSafari()) {\r\n        return {};\r\n    }\r\n    return {\r\n        // Safari-specific options\r\n        mimeType: 'audio/webm;codecs=opus',\r\n        audioBitsPerSecond: 128000, // Lower bitrate for better Safari compatibility\r\n    };\r\n};\r\n/**\r\n * Safari-specific chunk handling to prevent data loss\r\n */\r\nexport const handleSafariChunk = (chunk, existingChunks) => {\r\n    if (!isSafari()) {\r\n        return [...existingChunks, chunk];\r\n    }\r\n    // Safari-specific: Validate chunk before adding\r\n    if (chunk && chunk.size > 0) {\r\n        // Safari sometimes sends empty or corrupted chunks\r\n        try {\r\n            // Additional validation for Safari\r\n            if (chunk.type && chunk.type.startsWith('audio/')) {\r\n                console.log('Safari: Adding valid chunk with size:', chunk.size);\r\n                return [...existingChunks, chunk];\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.warn('Safari chunk validation failed:', error);\r\n        }\r\n    }\r\n    else {\r\n        console.warn('Safari: Received empty or invalid chunk');\r\n    }\r\n    return existingChunks;\r\n};\r\n/**\r\n * Safari-specific blob creation with fallback\r\n */\r\nexport const createSafariBlob = (chunks, mimeType) => {\r\n    if (!isSafari()) {\r\n        return new Blob(chunks, { type: mimeType });\r\n    }\r\n    console.log('Safari: Creating blob from', chunks.length, 'chunks');\r\n    // Safari-specific: Use fallback mime type if primary fails\r\n    try {\r\n        const blob = new Blob(chunks, { type: mimeType });\r\n        console.log('Safari: Blob created successfully with size:', blob.size);\r\n        return blob;\r\n    }\r\n    catch (error) {\r\n        console.warn('Safari blob creation failed with primary mime type, trying fallback');\r\n        const fallbackBlob = new Blob(chunks, { type: 'audio/webm' });\r\n        console.log('Safari: Fallback blob created with size:', fallbackBlob.size);\r\n        return fallbackBlob;\r\n    }\r\n};\r\n/**\r\n * Safari-specific function to ensure final chunk is captured\r\n */\r\nexport const ensureFinalChunk = async (mediaRecorder) => {\r\n    if (!isSafari()) {\r\n        return;\r\n    }\r\n    try {\r\n        // Request any remaining data\r\n        mediaRecorder.requestData();\r\n        // Give Safari time to process the final chunk\r\n        await new Promise(resolve => setTimeout(resolve, 150));\r\n        console.log('Safari: Final chunk request completed');\r\n    }\r\n    catch (error) {\r\n        console.warn('Safari final chunk request failed:', error);\r\n    }\r\n};\r\n//# sourceMappingURL=safari-helpers.js.map","import write_blob from 'capacitor-blob-writer';\r\nimport { RecordingStatus } from './definitions';\r\nimport { alreadyRecordingError, couldNotQueryPermissionStatusError, deviceCannotVoiceRecordError, emptyRecordingError, failedToFetchRecordingError, failedToRecordError, failureResponse, missingPermissionError, recordingHasNotStartedError, successResponse, } from './predefined-web-responses';\r\nimport { isSafari, handleSafariChunk, createSafariBlob } from './safari-helpers';\r\n// import getBlobDuration from 'get-blob-duration';\r\n// these mime types will be checked one by one in order until one of them is found to be supported by the current browser\r\nconst POSSIBLE_MIME_TYPES = {\r\n    'audio/aac': '.aac',\r\n    'audio/mp4': '.mp3',\r\n    'audio/webm;codecs=opus': '.ogg',\r\n    'audio/webm': '.ogg',\r\n    'audio/ogg;codecs=opus': '.ogg',\r\n};\r\nconst neverResolvingPromise = () => new Promise(() => undefined);\r\nexport class VoiceRecorderImpl {\r\n    constructor() {\r\n        this.mediaRecorder = null;\r\n        this.chunks = [];\r\n        this.pendingResult = neverResolvingPromise();\r\n        this.isSafariBrowser = isSafari();\r\n        this.safariDataInterval = null;\r\n    }\r\n    static async canDeviceVoiceRecord() {\r\n        var _a;\r\n        if (((_a = navigator === null || navigator === void 0 ? void 0 : navigator.mediaDevices) === null || _a === void 0 ? void 0 : _a.getUserMedia) == null || VoiceRecorderImpl.getSupportedMimeType() == null) {\r\n            return failureResponse();\r\n        }\r\n        else {\r\n            return successResponse();\r\n        }\r\n    }\r\n    async startRecording(options) {\r\n        if (this.mediaRecorder != null) {\r\n            throw alreadyRecordingError();\r\n        }\r\n        const deviceCanRecord = await VoiceRecorderImpl.canDeviceVoiceRecord();\r\n        if (!deviceCanRecord.value) {\r\n            throw deviceCannotVoiceRecordError();\r\n        }\r\n        const havingPermission = await VoiceRecorderImpl.hasAudioRecordingPermission().catch(() => successResponse());\r\n        if (!havingPermission.value) {\r\n            throw missingPermissionError();\r\n        }\r\n        return navigator.mediaDevices\r\n            .getUserMedia({ audio: true })\r\n            .then((stream) => this.onSuccessfullyStartedRecording(stream, options))\r\n            .catch(this.onFailedToStartRecording.bind(this));\r\n    }\r\n    async stopRecording() {\r\n        console.log('stopRecording');\r\n        if (this.mediaRecorder == null) {\r\n            throw recordingHasNotStartedError();\r\n        }\r\n        try {\r\n            // Safari-specific: Clear any ongoing data interval\r\n            if (this.safariDataInterval) {\r\n                clearInterval(this.safariDataInterval);\r\n                this.safariDataInterval = null;\r\n            }\r\n            this.mediaRecorder.stop();\r\n            this.mediaRecorder.stream.getTracks().forEach((track) => track.stop());\r\n            return this.pendingResult;\r\n        }\r\n        catch (ignore) {\r\n            throw failedToFetchRecordingError();\r\n        }\r\n        finally {\r\n            this.prepareInstanceForNextOperation();\r\n        }\r\n    }\r\n    static async hasAudioRecordingPermission() {\r\n        if (navigator.permissions.query == null) {\r\n            if (navigator.mediaDevices == null) {\r\n                return Promise.reject(couldNotQueryPermissionStatusError());\r\n            }\r\n            return navigator.mediaDevices\r\n                .getUserMedia({ audio: true })\r\n                .then(() => successResponse())\r\n                .catch(() => {\r\n                throw couldNotQueryPermissionStatusError();\r\n            });\r\n        }\r\n        return navigator.permissions\r\n            .query({ name: 'microphone' })\r\n            .then((result) => ({ value: result.state === 'granted' }))\r\n            .catch(() => {\r\n            throw couldNotQueryPermissionStatusError();\r\n        });\r\n    }\r\n    static async requestAudioRecordingPermission() {\r\n        const havingPermission = await VoiceRecorderImpl.hasAudioRecordingPermission().catch(() => failureResponse());\r\n        if (havingPermission.value) {\r\n            return successResponse();\r\n        }\r\n        return navigator.mediaDevices\r\n            .getUserMedia({ audio: true })\r\n            .then(() => successResponse())\r\n            .catch(() => failureResponse());\r\n    }\r\n    pauseRecording() {\r\n        if (this.mediaRecorder == null) {\r\n            throw recordingHasNotStartedError();\r\n        }\r\n        else if (this.mediaRecorder.state === 'recording') {\r\n            this.mediaRecorder.pause();\r\n            return Promise.resolve(successResponse());\r\n        }\r\n        else {\r\n            return Promise.resolve(failureResponse());\r\n        }\r\n    }\r\n    resumeRecording() {\r\n        if (this.mediaRecorder == null) {\r\n            throw recordingHasNotStartedError();\r\n        }\r\n        else if (this.mediaRecorder.state === 'paused') {\r\n            this.mediaRecorder.resume();\r\n            return Promise.resolve(successResponse());\r\n        }\r\n        else {\r\n            return Promise.resolve(failureResponse());\r\n        }\r\n    }\r\n    getCurrentStatus() {\r\n        if (this.mediaRecorder == null) {\r\n            return Promise.resolve({ status: RecordingStatus.NONE });\r\n        }\r\n        else if (this.mediaRecorder.state === 'recording') {\r\n            return Promise.resolve({ status: RecordingStatus.RECORDING });\r\n        }\r\n        else if (this.mediaRecorder.state === 'paused') {\r\n            return Promise.resolve({ status: RecordingStatus.PAUSED });\r\n        }\r\n        else {\r\n            return Promise.resolve({ status: RecordingStatus.NONE });\r\n        }\r\n    }\r\n    static getSupportedMimeType() {\r\n        if ((MediaRecorder === null || MediaRecorder === void 0 ? void 0 : MediaRecorder.isTypeSupported) == null)\r\n            return null;\r\n        const foundSupportedType = Object.keys(POSSIBLE_MIME_TYPES).find((type) => MediaRecorder.isTypeSupported(type));\r\n        return foundSupportedType !== null && foundSupportedType !== void 0 ? foundSupportedType : null;\r\n    }\r\n    onSuccessfullyStartedRecording(stream, options) {\r\n        this.pendingResult = new Promise((resolve, reject) => {\r\n            this.mediaRecorder = new MediaRecorder(stream);\r\n            this.mediaRecorder.onerror = (event) => {\r\n                console.error('MediaRecorder error:', event);\r\n                this.prepareInstanceForNextOperation();\r\n                reject(failedToRecordError());\r\n            };\r\n            this.mediaRecorder.onstop = async () => {\r\n                var _a, _b, _c, _d;\r\n                console.log('media recorder stopped');\r\n                // // Safari-specific: Ensure final chunk is captured before stopping\r\n                // if (this.isSafariBrowser && this.mediaRecorder) {\r\n                //   await ensureFinalChunk(this.mediaRecorder);\r\n                // }\r\n                // Safari-specific: One more final data request to catch any remaining chunks\r\n                if (this.isSafariBrowser) {\r\n                    try {\r\n                        console.log('Safari: Final data request in onstop handler');\r\n                        (_a = this.mediaRecorder) === null || _a === void 0 ? void 0 : _a.requestData();\r\n                        // Give Safari time to process any final chunks\r\n                        await new Promise(resolve => setTimeout(resolve, 200));\r\n                    }\r\n                    catch (error) {\r\n                        console.warn('Safari final data request in onstop failed:', error);\r\n                    }\r\n                }\r\n                const mimeType = VoiceRecorderImpl.getSupportedMimeType();\r\n                if (mimeType == null) {\r\n                    this.prepareInstanceForNextOperation();\r\n                    reject(failedToFetchRecordingError());\r\n                    return;\r\n                }\r\n                // Safari-specific: Ensure we have chunks before creating blob\r\n                if (this.chunks.length === 0) {\r\n                    console.warn('No chunks available for Safari recording');\r\n                    this.prepareInstanceForNextOperation();\r\n                    reject(emptyRecordingError());\r\n                    return;\r\n                }\r\n                console.log('Safari: Processing', this.chunks.length, 'chunks for final blob');\r\n                let firstChunk = this.chunks[0];\r\n                const blobVoiceRecording = createSafariBlob(this.chunks, firstChunk.type);\r\n                console.log('blobVoiceRecording', blobVoiceRecording);\r\n                if (blobVoiceRecording.size <= 0) {\r\n                    this.prepareInstanceForNextOperation();\r\n                    reject(emptyRecordingError());\r\n                    return;\r\n                }\r\n                console.log('line 181');\r\n                let path;\r\n                let recordDataBase64;\r\n                if (options != null) {\r\n                    const subDirectory = (_d = (_c = (_b = options.subDirectory) === null || _b === void 0 ? void 0 : _b.match(/^\\/?(.+[^/])\\/?$/)) === null || _c === void 0 ? void 0 : _c[1]) !== null && _d !== void 0 ? _d : '';\r\n                    path = `${subDirectory}/recording-${new Date().getTime()}${POSSIBLE_MIME_TYPES[mimeType]}`;\r\n                    await write_blob({\r\n                        blob: blobVoiceRecording,\r\n                        directory: options.directory,\r\n                        fast_mode: true,\r\n                        path,\r\n                        recursive: true,\r\n                    });\r\n                }\r\n                else {\r\n                    console.log('line 196');\r\n                    recordDataBase64 = await VoiceRecorderImpl.blobToBase64(blobVoiceRecording);\r\n                }\r\n                console.log('line 200');\r\n                // const recordingDuration = await getBlobDuration(blobVoiceRecording);\r\n                // console.log('recording duration', recordingDuration);\r\n                const recordingDuration = 1;\r\n                console.log('line 203');\r\n                this.prepareInstanceForNextOperation();\r\n                console.log('line 205');\r\n                resolve({ value: { recordDataBase64, blobVoiceRecording, mimeType, msDuration: recordingDuration * 1000, path } });\r\n            };\r\n            this.mediaRecorder.ondataavailable = (event) => {\r\n                console.log('ondataavailable', event);\r\n                if (event.data && event.data.size > 0) {\r\n                    this.chunks = handleSafariChunk(event.data, this.chunks);\r\n                }\r\n            };\r\n            // Safari-specific handling: Request data more frequently to avoid chunk loss\r\n            const timeslice = this.isSafariBrowser ? 1000 : undefined; // Request data every second in Safari\r\n            this.mediaRecorder.start(timeslice);\r\n            // Safari-specific: Additional safety mechanism for longer recordings\r\n            if (this.isSafariBrowser) {\r\n                this.safariDataInterval = window.setInterval(() => {\r\n                    if (this.mediaRecorder && this.mediaRecorder.state === 'recording') {\r\n                        try {\r\n                            // Force data availability in Safari\r\n                            this.mediaRecorder.requestData();\r\n                        }\r\n                        catch (error) {\r\n                            console.warn('Safari data request failed:', error);\r\n                        }\r\n                    }\r\n                }, 2000); // Request data every 2 seconds as additional safety\r\n            }\r\n            console.log('started recording');\r\n        });\r\n        return successResponse();\r\n    }\r\n    onFailedToStartRecording() {\r\n        this.prepareInstanceForNextOperation();\r\n        throw failedToRecordError();\r\n    }\r\n    static blobToBase64(blob) {\r\n        return new Promise((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                const recordingResult = String(reader.result);\r\n                const splitResult = recordingResult.split('base64,');\r\n                const toResolve = splitResult.length > 1 ? splitResult[1] : recordingResult;\r\n                resolve(toResolve.trim());\r\n            };\r\n            reader.readAsDataURL(blob);\r\n        });\r\n    }\r\n    prepareInstanceForNextOperation() {\r\n        if (this.mediaRecorder != null && this.mediaRecorder.state === 'recording') {\r\n            try {\r\n                this.mediaRecorder.stop();\r\n            }\r\n            catch (error) {\r\n                console.warn('While trying to stop a media recorder, an error was thrown', error);\r\n            }\r\n        }\r\n        // Safari-specific: Clear data interval\r\n        if (this.safariDataInterval) {\r\n            clearInterval(this.safariDataInterval);\r\n            this.safariDataInterval = null;\r\n        }\r\n        this.pendingResult = neverResolvingPromise();\r\n        this.mediaRecorder = null;\r\n        // this.chunks = [];\r\n    }\r\n}\r\n//# sourceMappingURL=VoiceRecorderImpl.js.map","import { WebPlugin } from '@capacitor/core';\r\nimport { VoiceRecorderImpl } from './VoiceRecorderImpl';\r\nexport class VoiceRecorderWeb extends WebPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.voiceRecorderInstance = new VoiceRecorderImpl();\r\n    }\r\n    canDeviceVoiceRecord() {\r\n        return VoiceRecorderImpl.canDeviceVoiceRecord();\r\n    }\r\n    hasAudioRecordingPermission() {\r\n        return VoiceRecorderImpl.hasAudioRecordingPermission();\r\n    }\r\n    requestAudioRecordingPermission() {\r\n        return VoiceRecorderImpl.requestAudioRecordingPermission();\r\n    }\r\n    startRecording(options) {\r\n        return this.voiceRecorderInstance.startRecording(options);\r\n    }\r\n    stopRecording() {\r\n        return this.voiceRecorderInstance.stopRecording();\r\n    }\r\n    pauseRecording() {\r\n        return this.voiceRecorderInstance.pauseRecording();\r\n    }\r\n    resumeRecording() {\r\n        return this.voiceRecorderInstance.resumeRecording();\r\n    }\r\n    getCurrentStatus() {\r\n        return this.voiceRecorderInstance.getCurrentStatus();\r\n    }\r\n}\r\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","WebPlugin"],"mappings":"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"}